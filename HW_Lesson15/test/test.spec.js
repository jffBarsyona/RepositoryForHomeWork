const Calculation = require('./common/fun');

describe('Calculator', function () {
    describe('add', () => {

        it('Сложение натуральных чисел.', () => {
            Calculation.add([9, 9], 18);
        });
        //Ошибка в калькуляторе
        it('Сложение дробных положительных чисел без целого.', () => {
            Calculation.add([0.1, 0.2], 0.3);
        });
        //Ошибка в калькуляторе
        it('Сложение дробных отрицательных чисел без целого.', () => {
            Calculation.add([-0.1, -0.2], -0.3);
        });

        it('Сложение дробных чисел.', () => {
            Calculation.add([1.2, 1.2, 4.5], 6.9);
        });

        it('Сложение дробных чисел с разным кол-во знаков после запятой.', () => {
            Calculation.add([1.2, 1.25, 4.123456789123456], 6.5734567891234565);
        });

        it('Сложение отрицательных дробных чисел.', () => {
            Calculation.add([-9.9, -11.2], -21.1);
        });

        it('Сложение отрицательных натуральных чисел.', () => {
            Calculation.add([-100, -99], -199);
        });

        it('Сложение самого большого безопасного числа.', () => {
            Calculation.add([9007199254740991, 9], 9007199254741000);
        });

        it('Сложение самого большого безопасного отрицательного числа.', () => {
            Calculation.add([-9007199254740991, 9], -9007199254740982);
        });

        it('Сложение дробного и натурального числа.', () => {
            Calculation.add([1.4, 9], 10.4);
        });

        it('Сложение отрицательного и натурального числа.', () => {
            Calculation.add([-5, 9], 4);
        });

        //Ошибка в работе калькулятора
        it('Сложение граничных чисел.', () => {
            Calculation.add([99.9, 9.9], 109.8);
        });

        //Ошибка в работе калькулятора на граничных значениях с минусом
        it('Сложение отрицательного дробного и натурального числа.', () => {
            Calculation.add([-19.9, 9], -10.5);
        });

        //Ошибка в работе калькулятора на граничных значениях с минусом
        it('Сложение отрицательного дробного и натурального числа.', () => {
            Calculation.add([-19.1, 9], -10.5);
        });

        it('Сложение нулей.', () => {
            Calculation.add([0, 0], 0);
        });

        it('Сложение с нулём.', () => {
            Calculation.add([100, 0], 100);
        });

        it('1 агрумент.', () => {
            Calculation.add([9], 9);
        });

        it('Нет агрументов.', () => {
            Calculation.add([], 0);
        });

    });
    describe('multiply', () => {

        it('Умножение натуральных чисел.', () => {
            Calculation.multiply([4, 4], 16);
        });

        //Ошибка в работе калькулятора из-за 4.5
        it('Умножение дробных чисел.', () => {
            Calculation.multiply([1.2, 1.2, 4.5], 6.48);
        });

        //Ошибка в работе калькулятора из-за большоко кол-ва знаков после запятой
        it('Умножение дробных чисел с разным кол-во знаков после запятой.', () => {
            Calculation.multiply([1.2, 1.25, 4.123456789123456], 6.185185183685184);
        });

        it('Умножение отрицательных дробных чисел.', () => {
            Calculation.multiply([-9.9, -11.2], 110.88);
        });

        it('Умножение отрицательных натуральных чисел.', () => {
            Calculation.multiply([-100, -99], 9900);
        });

        it('Умножение самого большого безопасного числа.', () => {
            Calculation.multiply([9007199254740991, 9], 81064793292668910);
        });

        it('Умножение самого большого безопасного отрицательного числа.', () => {
            Calculation.multiply([-9007199254740991, 9], -81064793292668910);
        });

        it('Умножение дробного и натурального числа.', () => {
            Calculation.multiply([1.4, 9], 12.6);
        });

        it('Умножение отрицательного и натурального числа.', () => {
            Calculation.multiply([-5, 9], -45);
        });

        //Ошибка в работе калькулятора на граничных положительных значениях 
        it('Умножение граничных чисел.', () => {
            Calculation.multiply([99.9, 9.9], 989.01);
        });

        it('Умножение отрицательного дробного и натурального числа.', () => {
            Calculation.multiply([-19.9, 9], -179.1);
        });

        it('Умножение отрицательного дробного и натурального числа.', () => {
            Calculation.multiply([-19.1, 9], -171.9);
        });

        //Ошибка в работе калькулятора
        it('Умножение отрицательного дробного числа для смещения запятой на 1 знак.', () => {
            Calculation.multiply([-19.1, 0.1], -1.91);
        });

        it('Умножение нулей.', () => {
            Calculation.multiply([0, 0], 0);
        });

        it('Умножение с нулём.', () => {
            Calculation.multiply([100, 0], 0);
        });

        it('Умножение на ноль.', () => {
            Calculation.multiply([0, 100], 0);
        });

        it('1 агрумент.', () => {
            Calculation.multiply([9], 9);
        });

        //Ошибка в работе калькулятора, когда нет аргументов
        it('Нет агрументов.', () => {
            Calculation.multiply([], 0);
        });

    });
    describe('subtraction', () => {

        it('Вычитание натуральных чисел.', () => {
            Calculation.subtraction([10, 9], 1);
        });

        //Ошибка в работе калькулятора на граничных значениях
        it('Вычитание дробных чисел.', () => {
            Calculation.subtraction([1.2, 1.3], -0.1);
        });

        //Ошибка в калькуляторе
        it('Вычитание дробных положительных чисел без целого.', () => {
            Calculation.subtraction([0.3, 0.2], 0.1);
        });
        //Вычитание в калькуляторе
        it('Сложение дробных отрицательных чисел без целого.', () => {
            Calculation.subtraction([-0.3, -0.1], -0.2);
        });

        it('Вычитание дробных чисел с разным кол-во знаков после запятой.', () => {
            Calculation.subtraction([4.12345678912345, 1.5], 2.62345678912345);
        });

        //Ошибка в работе калькулятора на граничных значениях
        it('Вычитание отрицательных дробных чисел.', () => {
            Calculation.subtraction([-9.9, -11.2], 1, 3);
        });

        it('Вычитание отрицательных натуральных чисел.', () => {
            Calculation.subtraction([-100, -99], -1);
        });

        it('Вычитание самого большого безопасного числа.', () => {
            Calculation.subtraction([9007199254740991, 9], 9007199254740982);
        });

        it('Вычитание самого большого безопасного отрицательного числа.', () => {
            Calculation.subtraction([-9007199254740991, 9], -9007199254741000);
        });

        it('Вычитание дробного и натурального числа.', () => {
            Calculation.subtraction([9, 1.4], 7.6);
        });

        it('Вычитание отрицательного и натурального числа.', () => {
            Calculation.subtraction([-15, 9], -24);
        });
        it('Вычитание граничных чисел.', () => {
            Calculation.subtraction([99.9, 9.9], 90);
        });

        it('Вычитание отрицательного дробного и натурального числа.', () => {
            Calculation.subtraction([-19.9, 9], -28.9);
        });

        it('Вычитание отрицательного дробного и натурального числа.', () => {
            Calculation.subtraction([-19.1, 9], -28.1);
        });

        it('Вычитание нулей.', () => {
            Calculation.subtraction([0, 0], 0);
        });

        it('Вычитание от нуля дробного без целого.', () => {
            Calculation.subtraction([0, 0.10], -0.1);
        });

        it('Вычитание с нулём.', () => {
            Calculation.subtraction([100, 0], 100);
        });
    });
    describe('divide', () => {

        it('Деление натуральных чисел.', () => {
            Calculation.divide([9, 9], 1);
        });

        //Ошибка в работе калькулятора, если результатом является дробное число
        it('Деление дробных чисел.', () => {
            Calculation.divide([6.9, 3.3], 22.77);
        });

        it('Деление дробных чисел.', () => {
            Calculation.divide([1.2, 1.2], 1);
        });

        //Ошибка в работе калькулятора при делении отрицательных дробных, результатом которого является целое число
        it('Деление отрицательных дробных чисел.', () => {
            Calculation.divide([-9.9, -3.3], 3);
        });

        it('Деление отрицательных натуральных чисел.', () => {
            Calculation.divide([-100, -10], 10);
        });

        it('Деление самого большого безопасного числа.', () => {
            Calculation.divide([9007199254740991, 2], 4503599627370495.5);
        });

        it('Деление самого большого безопасного отрицательного числа.', () => {
            Calculation.divide([-9007199254740991, 2], -4503599627370495.5);
        });

        it('Деление дробного и натурального числа.', () => {
            Calculation.divide([0.18, 9], 0.02);
        });

        it('Деление отрицательного и натурального числа.', () => {
            Calculation.divide([-18, 9], -2);
        });

        //Ошибка в работе калькулятора
        it('Деление граничных чисел.', () => {
            Calculation.divide([99.9, 9], 11.1);
        });

        it('Деление отрицательного дробного и натурального числа.', () => {
            Calculation.divide([-18.9, 3], -6.3);
        });


        it('Деление отрицательного дробного для смещения запятой на 1 знак.', () => {
            Calculation.divide([-19.1, 0.1], -191);
        });

        //Ошибка в работе калькулятора. Не обработана ситуация
        it('Деление нулей.', () => {
            Calculation.divide([0, 0], 0);
        });

        it('Деление с нулём.', () => {
            Calculation.divide([100, 0], Infinity);
        });

    });
    describe('exponentiation', () => {

        it('Возведение в кдварта натурального числа.', () => {
            Calculation.exponentiation([9], 81);
        });

        it('Возведение в кдварта отрицательного натурального числа.', () => {
            Calculation.exponentiation([-8], 64);
        });

        it('Возведение в квадрат дробного числа.', () => {
            Calculation.exponentiation([1.5], 2.25);
        });

        it('Возведение в квадрат дробного отрицательного числа.', () => {
            Calculation.exponentiation([-1.25], 1.5625);
        });

        it('Возведение в квадрат большого числа.', () => {
            Calculation.exponentiation([41234], 1700242756);
        });

        //Ошибка в калькуляторе
        it('Возведение в степень 0 целых.', () => {
            Calculation.exponentiation([0.1], 0.0001);
        });

        //Ошибка в калькуляторе
        it('Возведение в степень 0 отрицательных целых.', () => {
            Calculation.exponentiation([-0.1], 0.0001);
        });

        //Ошибка в калькуляторе
        it('Возведение в квадрат числа с больши кол-во знаков после запятой.', () => {
            Calculation.exponentiation([1,41234], 1.9947042756);
        });

        it('Возведение в квадрат 0.', () => {
            Calculation.exponentiation([0], 0);
        });
    });
});









